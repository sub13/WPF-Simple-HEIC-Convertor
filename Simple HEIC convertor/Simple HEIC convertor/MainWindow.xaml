<Window x:Class="Simple_HEIC_convertor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:enums="clr-namespace:Simple_HEIC_convertor.Utils"
        xmlns:colorEnum="Simple_HEIC_convertor.Enums"
        xmlns:ie="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Icon="apple1.ico"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="Simple HEIC Convertor" Height="480" Width="640" ResizeMode="CanMinimize">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="cleanButtonToVisibility" />
        <!--<ResourceDictionary>
            <enums:EnumItemsSource x:Key="ExampleEnumItemsSource" Type="{x:Type colorEnum:ColorSchemes}" />
        </ResourceDictionary>-->
    </Window.Resources>
    <Grid Margin="0,-2,-8,-4" HorizontalAlignment="Right" Width="640" Height="455" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="125*"/>
        </Grid.ColumnDefinitions>
        <Button Command="{Binding OpenImagesCommand}" x:Name="OpenFilesButton" Content="Выбрать файлы" AllowDrop="True" Margin="34,272,361,148" Grid.Column="3"  Height="Auto" Grid.Row="1">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewDrop">
                    <i:InvokeCommandAction Command="{Binding DranAndDropFilesCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Command="{Binding SetConvertPathCommand}" Content="Путь сохранения" Margin="344,272,51,148" Grid.Column="3" Height="Auto" Grid.Row="1"/>
        <RadioButton IsChecked="{Binding IsJpgFormat}" x:Name="RadioButton1" Content="JPG" Margin="35,391,542,43" RenderTransformOrigin="0.14,-1.003" Grid.Row="1" Grid.Column="3"/>
        <RadioButton IsChecked="{Binding IsPngFormat}" x:Name="RadioButton2" Content="PNG" Margin="35,365,542,69" RenderTransformOrigin="0.14,-1.003" Grid.Row="1" Grid.Column="3"/>
        <Button Command="{Binding ConvertImageCommand}" Content="Конвертировать" Margin="228,332,256,88" Height="Auto" Grid.Row="1" Grid.Column="3"/>
        <Border Grid.ColumnSpan="3" Margin="0,0,15,452" Grid.RowSpan="2"></Border>
        <ProgressBar Background="Gray" x:Name="progressBar1" Height="Auto" Margin="39,18,51,397" SmallChange="0" Grid.Row="1" Grid.Column="3" IsIndeterminate="{Binding IsConvertingStart}" ValueChanged="progressBar1_ValueChanged">

        </ProgressBar>
        <ScrollViewer Background="Gray" x:Name="FilesViewer" AllowDrop="True"
                      Margin="39,102,51,208" RenderTransformOrigin="-0.32,0.82" 
                      CanContentScroll="True" Grid.Row="1" Grid.Column="3">
            <StackPanel Grid.Row="1" Height="145" HorizontalAlignment="Center" VerticalAlignment="Top" FlowDirection="LeftToRight" Width="508">
                <ItemsControl ItemsSource="{Binding Path=AllFilePaths}" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=Path}" IsReadOnly="True" IsReadOnlyCaretVisible="True" Cursor="Arrow">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction 
                                            Command="{Binding Path=OpenImagePreviewCommand}"
                                            CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel.ToolTip>
                    <ToolTip>
                        Нажмите на файл два раза левой кнопкой для предварительного просмотра!
                    </ToolTip>
                </StackPanel.ToolTip>
            </StackPanel>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewDrop">
                    <i:InvokeCommandAction Command="{Binding DranAndDropFilesCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ScrollViewer>
        <Label Content="Формат:" Margin="34,338,513,90" Grid.Row="1" Grid.Column="3"/>
        <Label Content="Открытые файлы:" Margin="35,63,281,365" Grid.Row="1" Grid.Column="3"/>

        <Button Visibility="{Binding IsCleanButtonVisible, Converter={StaticResource cleanButtonToVisibility}, FallbackValue=Hidden }" Command="{Binding ClearFilePathsCommand}" x:Name="CleanFilesButton" Margin="530,64,51,365" Height="Auto" Grid.Row="1" Grid.Column="3" RenderTransformOrigin="0.404,0.35">
            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon Kind="Broom" Height="16" Width="14"/>
            </StackPanel>
        </Button>

        <materialDesign:PopupBox Content="PopupBox" Grid.Column="2" HorizontalAlignment="Stretch" Margin="10,25,596,404" Grid.RowSpan="2" Grid.ColumnSpan="2">
            <Button Content="Справка" Command="{Binding OpenHelpCommand}" />
        </materialDesign:PopupBox>
        <CheckBox x:Name="ThemeCheckBox" Content="Темная тема" Grid.Column="3" HorizontalAlignment="Left" 
                  Margin="475,367,0,0" Grid.RowSpan="2" VerticalAlignment="Top" IsChecked="{Binding IsDarkTheme}" 
                  Width="99">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Checked">
                    <i:InvokeCommandAction Command="{Binding SetDarkThemeCommand}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="Unchecked">
                    <i:InvokeCommandAction Command="{Binding SetDarkThemeCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </CheckBox>
        <ComboBox HorizontalAlignment="Left" Grid.RowSpan="2" VerticalAlignment="Top" 
                  Width="99" Grid.Column="3" Margin="475,391,0,0"
                  ItemsSource="{Binding ColorSchemes}" SelectedItem="{Binding SelectedColorScheme}">
            <!--<ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource enumConverter}}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>-->
        </ComboBox>

    </Grid>
</Window>
